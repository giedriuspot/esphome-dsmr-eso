
substitutions:
  device_name: slimmelezer
  friendly_name: DSMR Reader

external_components:
  - source: github://giedriuspot/esphome-dsmr-eso@main
    refresh: 0s

esp8266:
  board: d1_mini
  restore_from_flash: true

esphome:
  name: ${device_name}
  name_add_mac_suffix: false
  project:
    name: geduxas.esodsmr
    version: "2.0"
  on_boot:
    then:
      - if:
          condition:
            lambda: return id(has_key);
          then:
            - lambda: |-
                std::string key(id(stored_decryption_key), 32);
                id(dsmr_instance).set_decryption_key(key);
          else:
            - logger.log:
                level: info
                format: "Not using decryption key. If you need to set a key use Home Assistant service 'ESPHome:  ${device_name}_set_dsmr_key'"

wifi:
  # remove leading '#' and fill in your wifi details
#  ssid: !secret wifi_ssid 
#  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_name}

captive_portal:

# Enable logging
logger:
  baud_rate: 0
  level: WARN

# Enable Home Assistant API
api:
  services:
    service: set_dsmr_key
    variables:
      private_key: string
    then:
      - logger.log:
          format: Setting private key %s. Set to empty string to disable
          args: [private_key.c_str()]
      - globals.set:
          id: has_key
          value: !lambda "return private_key.length() == 32;"
      - lambda: |-
          if (private_key.length() == 32)
            private_key.copy(id(stored_decryption_key), 32);
          id(dsmr_instance).set_decryption_key(private_key);

ota:

dashboard_import:
  package_import_url: github://geduxas/esphome-dsmr-eso/slimmelezer.yaml@main
  import_full_config: true

web_server:
  port: 80

uart:
  baud_rate: 115200
  rx_pin: D7
  rx_buffer_size: 3072
      

globals:
  - id: has_key
    type: bool
    restore_value: yes
    initial_value: "false"
  - id: stored_decryption_key
    type: char[32]
    restore_value: yes

dsmr_eso:
  id: dsmr_instance
  max_telegram_length: 4096
  # For Luxembourg users set here your decryption key
  #decryption_key: !secret decryption_key // enable this when using decryption for Luxembourg; key like '00112233445566778899AABBCCDDEEFF'

sensor:
  - platform: dsmr_eso
    energy_delivered_tariff1:
      name: ${friendly_name} Energy Delivered Tariff 1
      state_class: total_increasing
#    energy_delivered_tariff2:
#      name: ${friendly_name} Energy Delivered Tariff 2
#      state_class: total_increasing
    energy_returned_tariff1:
      name: ${friendly_name} Energy Returned Tariff 1
#    energy_returned_tariff2:
#      name: ${friendly_name} Energy Returned Tariff 2
    reactive_energy_delivered_tariff1:
        name: ${friendly_name} Reactiver Power Delivered 1
    reactive_energy_returned_tariff1:
        name: ${friendly_name} Reactiver Power Returned 1
#    power_delivered:
#      name: ${friendly_name} Power Consumed
#      accuracy_decimals: 3
#    power_returned:
#      name: ${friendly_name} Power Returned
#      accuracy_decimals: 3
    electricity_failures:
      name: ${friendly_name} Electricity Failures
      icon: mdi:alert
    voltage:
      name: ${friendly_name} Voltage
#      unit_of_measurement: "V"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    voltage_l1:
      name: ${friendly_name} Voltage L1
#      unit_of_measurement: "V"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    voltage_avg_l1:
      name: ${friendly_name} Voltage average L1
#      unit_of_measurement: "V"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    voltage_l2:
      name: ${friendly_name} Voltage L2
#      unit_of_measurement: "V"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    voltage_avg_l2:
      name: ${friendly_name} Voltage average L2
#      unit_of_measurement: "V"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    voltage_l3:
      name: ${friendly_name} Voltage L3
#      unit_of_measurement: "V"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    voltage_avg_l3:
      name: ${friendly_name} Voltage average L3
#      unit_of_measurement: "V"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    current_l1:
      name: ${friendly_name} Current L1
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    current_fuse_l1:
      name: ${friendly_name} Current Fuse L1
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    current_l2:
      name: ${friendly_name} Current L2
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    current_fuse_l2:
      name: ${friendly_name} Current Fuse L2
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters:
#       multiply: 1000
    current_l3:
      name: ${friendly_name} Current L3
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters: 
#        multiply: 1000
    current_fuse_l3:
      name: ${friendly_name} Current Fuse L3
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    current:
      name: ${friendly_name} Current
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    current_n:
      name: ${friendly_name} Current N
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    current_sum:
      name: ${friendly_name} Current sum
#      unit_of_measurement: "A"
#      accuracy_decimals: 0
#      filters:
#        multiply: 1000
    power_delivered_l1:
      name: ${friendly_name} Power Delivered L1
    power_delivered_l2:
      name: ${friendly_name} Power Delivered L2
    power_delivered_l3:
      name: ${friendly_name} Power Delivered L3
    power_returned_l1:
      name: ${friendly_name} Power Returned L1
    power_returned_l2:
      name: ${friendly_name} Power Returned L2
    power_returned_l3:
      name: ${friendly_name} Power Returned L3
    apparent_delivery_power:
      name: ${friendly_name} Apparent Power Deliverd
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_delivery_power_l1:
      name: ${friendly_name} Apparent Power Deliverd L1
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_delivery_power_l2:
      name: ${friendly_name} Apparent Power Deliverd L2
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_delivery_power_l3:
      name: ${friendly_name} Apparent Power Deliverd L3
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_return_power:
      name: ${friendly_name} Apparent Power Returned 
      accuracy_decimals: 0
      filters: 
        multiply: 1000
    apparent_return_power_l1:
      name: ${friendly_name} Apparent Power Returned L1
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_return_power_l2:
      name: ${friendly_name} Apparent Power Returned L2
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_return_power_l3:
      name: ${friendly_name} Apparent Power Returned L3
      accuracy_decimals: 0
      filters:
        multiply: 1000
    active_demand_power:
      name: ${friendly_name} Active Demand Avg3
    active_demand_net:
      name: ${friendly_name} Active Demand Avg3 Net
    active_demand_abs:
      name: ${friendly_name} Active Demand Avg3 Absolute 
    reactive_power_delivered_l1:
      name: ${friendly_name} Reactive Power Delivered L1
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    reactive_power_delivered_l2:
      name: ${friendly_name} Reactive Power Delivered L2
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    reactive_power_delivered_l3:
      name: ${friendly_name} Reactive Power Delivered L3
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    reactive_power_returned_l1:
      name: ${friendly_name} Reactive Power Returned L1
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    reactive_power_returned_l2:
      name: ${friendly_name} Reactive Power Returned L2
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    reactive_power_returned_l3:
      name: ${friendly_name} Reactive Power Returned L3
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    active_energy_import_current_average_demand:
      name: ${friendly_name} Active Average Recive Demand
    active_energy_export_current_average_demand:
      name: ${friendly_name} Active Average Export Demand
    reactive_energy_import_current_average_demand:
      name: ${friendly_name} Reactive Average Recive Demand
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    reactive_energy_export_current_average_demand:
      name: ${friendly_name} Reactive Average Export Demand
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_energy_import_current_average_demand:
      name: ${friendly_name} Apparent Average Recive Demand
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_energy_export_current_average_demand:
      name: ${friendly_name} Apparent Average Export Demand
      accuracy_decimals: 0
      filters:
        multiply: 1000
    active_energy_import_last_completed_demand:
      name: ${friendly_name} Active Last Recive Demand
    active_energy_export_last_completed_demand:
      name: ${friendly_name} Active Last Export Demand
    reactive_energy_import_last_completed_demand:
      name: ${friendly_name} Reactive Last Recive Demand
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    reactive_energy_export_last_completed_demand:
      name: ${friendly_name} Reactive Last Export Demand
      unit_of_measurement: "var"
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_energy_import_last_completed_demand:
      name: ${friendly_name} Apparent Last Recive Demand
      accuracy_decimals: 0
      filters:
        multiply: 1000
    apparent_energy_export_last_completed_demand:
      name: ${friendly_name} Apparent Last Export Demand
      accuracy_decimals: 0
      filters:
        multiply: 1000
    frequency:
      name: ${friendly_name} Frequency
    abs_power:
      name: ${friendly_name} Active Power
    power_factor:
      name: ${friendly_name} Power Factor
      filters:
        multiply: 100
    power_factor_l1:
      name: ${friendly_name} Power Factor L1
      filters:
        multiply: 100
    power_factor_l2:
      name: ${friendly_name} Power Factor L2
      filters:
        multiply: 100
    power_factor_l3:
      name: ${friendly_name} Power Factor L3
      filters:
        multiply: 100
    min_power_factor:
      name: ${friendly_name} Min Power Factor
      filters:
        multiply: 100
    voltage_sag_time_l1:
      name: ${friendly_name} Voltage Sag duration L1
    voltage_sag_time_l2:
      name: ${friendly_name} Voltage Sag duration L2
    voltage_sag_time_l3:
      name: ${friendly_name} Voltage Sag duration L3
    voltage_sag_l1:
      name: ${friendly_name} Voltage Last Sag L1
    voltage_sag_l2:
      name: ${friendly_name} Voltage Last Sag L2
    voltage_sag_l3:
      name: ${friendly_name} Voltage Last Sag L3
    voltage_swell_time_l1:
      name: ${friendly_name} Voltage Swell duration L1
    voltage_swell_time_l2:
      name: ${friendly_name} Voltage Swell duration L2
    voltage_swell_time_l3:
      name: ${friendly_name} Voltage Swell duration L3
    voltage_swell_l1:
      name: ${friendly_name} Voltage Last Swell L1
    voltage_swell_l2:
      name: ${friendly_name} Voltage Last Swell L3
    voltage_swell_l3:
      name: ${friendly_name} Voltage Last Swell L3
    fw_core_version:
      name: ${friendly_name} Core version
    fw_module_version:
      name: ${friendly_name} Module version
  - platform: uptime
    name: "SlimmeLezer Uptime"
  - platform: wifi_signal
    name: "SlimmeLezer Wi-Fi Signal"
    update_interval: 60s

button:
  - platform: template
    name: "Dump telemetry"
    on_press:
      - lambda: id(dsmr_instance).dump_telemetry();

text_sensor:
  - platform: dsmr_eso
    identification:
      name: "DSMR Identification"
    fw_core_checksum:
      name: ${friendly_name} Core checskum
    fw_module_checksum:
      name: ${friendly_name} Module checskum
    equipment_id:
      name: ${friendly_name} Equipment identifier
    consumer_msg:
      name: ${friendly_name} Consumer Message Text
  - platform: wifi_info
    ip_address:
      name: "SlimmeLezer IP Address"
    ssid:
      name: "SlimmeLezer Wi-Fi SSID"
    bssid:
      name: "SlimmeLezer Wi-Fi BSSID"
  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true